function x(n,t){return{value:n,key:t(n)}}function i(n,t,s=0){return{startVertex:n,endVertex:t,weight:s}}function V(n=!1){let t=[],s=[];return Object.freeze({isDirected:n,get vertices(){return t},get edges(){return s},createGraphEdge:i,createGraphVertex:x,addVertex(e){let r=this.getVertex(e.key);return r?(r.value=e.value,this):(t.push(e),this)},getVertex(e){return t.find(r=>r.key===e)},addEdge(e){return this.addVertex(e.startVertex).addVertex(e.endVertex).edges.push(e),this},neighbors(e){return this.edges.filter(r=>r.startVertex===e||r.endVertex===e)},toJSON(){let{isDirected:e}=this,r=t.map(a=>{let{key:p,value:h}=a;return{key:p,value:h}}),c=s.map(a=>{let{startVertex:p,endVertex:h,weight:u}=a;return{start:p.key,end:h.key,weight:u}});return{isDirected:e,vertices:r,edges:c}}})}export{x as a,i as b,V as c};
